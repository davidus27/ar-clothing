from pydantic import BaseModel
from typing import Optional, List
from pydantic import BaseModel
from typing_extensions import Annotated
from pydantic.functional_validators import BeforeValidator
from ..models.garments_model import Garment
from .links import Link


PyObjectId = Annotated[str, BeforeValidator(str)]

class UserBase(BaseModel):
    # generated by FastAPI
    id: Optional[str] = None
    joinedDate: Optional[str] = None

    # Optional fields
    imageBase64: Optional[str] = None
    description: Optional[str] = None
    
    # Required fields
    name: str

    # garments
    garments: Optional[List[Garment]] = []


class UserCreate(UserBase):
    token: str  # Add token field to response



class UserUpdate(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    imageBase64: Optional[str] = None
    garments: Optional[List[Garment]] = []


class UserResponse(UserBase):
    links: List[Link] = []